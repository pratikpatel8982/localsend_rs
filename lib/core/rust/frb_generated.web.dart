// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'actor/core.dart';
import 'actor/mission/pending.dart';
import 'actor/mission/transfer.dart';
import 'actor/model.dart';
import 'api/model.dart';
import 'bridge.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'logger.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_CoreConfigPtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  CoreConfig
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
          dynamic raw);

  @protected
  Map<String, String> dco_decode_Map_String_String(dynamic raw);

  @protected
  Map<String, FileInfo> dco_decode_Map_String_file_info(dynamic raw);

  @protected
  CoreConfig
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
          dynamic raw);

  @protected
  RustStreamSink<bool> dco_decode_StreamSink_bool_Sse(dynamic raw);

  @protected
  RustStreamSink<List<NodeDevice>> dco_decode_StreamSink_list_node_device_Sse(
      dynamic raw);

  @protected
  RustStreamSink<PendingMissionDto>
      dco_decode_StreamSink_pending_mission_dto_Sse(dynamic raw);

  @protected
  RustStreamSink<TransferMissionDto>
      dco_decode_StreamSink_transfer_mission_dto_Sse(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  Mission dco_decode_box_autoadd_mission(dynamic raw);

  @protected
  NodeDevice dco_decode_box_autoadd_node_device(dynamic raw);

  @protected
  FileInfo dco_decode_file_info(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw);

  @protected
  List<NodeDevice> dco_decode_list_node_device(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, FileInfo)> dco_decode_list_record_string_file_info(dynamic raw);

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  List<TransferFileInfo> dco_decode_list_transfer_file_info(dynamic raw);

  @protected
  LogEntry dco_decode_log_entry(dynamic raw);

  @protected
  Mission dco_decode_mission(dynamic raw);

  @protected
  MissionState dco_decode_mission_state(dynamic raw);

  @protected
  NodeDevice dco_decode_node_device(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  Mission? dco_decode_opt_box_autoadd_mission(dynamic raw);

  @protected
  Uint8List? dco_decode_opt_list_prim_u_8_strict(dynamic raw);

  @protected
  PendingMissionDto dco_decode_pending_mission_dto(dynamic raw);

  @protected
  (String, FileInfo) dco_decode_record_string_file_info(dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  TransferFileInfo dco_decode_transfer_file_info(dynamic raw);

  @protected
  TransferMissionDto dco_decode_transfer_mission_dto(dynamic raw);

  @protected
  TransferState dco_decode_transfer_state(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  BigInt dco_decode_usize(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  CoreConfig
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
          SseDeserializer deserializer);

  @protected
  Map<String, String> sse_decode_Map_String_String(
      SseDeserializer deserializer);

  @protected
  Map<String, FileInfo> sse_decode_Map_String_file_info(
      SseDeserializer deserializer);

  @protected
  CoreConfig
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
          SseDeserializer deserializer);

  @protected
  RustStreamSink<bool> sse_decode_StreamSink_bool_Sse(
      SseDeserializer deserializer);

  @protected
  RustStreamSink<List<NodeDevice>> sse_decode_StreamSink_list_node_device_Sse(
      SseDeserializer deserializer);

  @protected
  RustStreamSink<PendingMissionDto>
      sse_decode_StreamSink_pending_mission_dto_Sse(
          SseDeserializer deserializer);

  @protected
  RustStreamSink<TransferMissionDto>
      sse_decode_StreamSink_transfer_mission_dto_Sse(
          SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  Mission sse_decode_box_autoadd_mission(SseDeserializer deserializer);

  @protected
  NodeDevice sse_decode_box_autoadd_node_device(SseDeserializer deserializer);

  @protected
  FileInfo sse_decode_file_info(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer);

  @protected
  List<NodeDevice> sse_decode_list_node_device(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, FileInfo)> sse_decode_list_record_string_file_info(
      SseDeserializer deserializer);

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
      SseDeserializer deserializer);

  @protected
  List<TransferFileInfo> sse_decode_list_transfer_file_info(
      SseDeserializer deserializer);

  @protected
  LogEntry sse_decode_log_entry(SseDeserializer deserializer);

  @protected
  Mission sse_decode_mission(SseDeserializer deserializer);

  @protected
  MissionState sse_decode_mission_state(SseDeserializer deserializer);

  @protected
  NodeDevice sse_decode_node_device(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  Mission? sse_decode_opt_box_autoadd_mission(SseDeserializer deserializer);

  @protected
  Uint8List? sse_decode_opt_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  PendingMissionDto sse_decode_pending_mission_dto(
      SseDeserializer deserializer);

  @protected
  (String, FileInfo) sse_decode_record_string_file_info(
      SseDeserializer deserializer);

  @protected
  (String, String) sse_decode_record_string_string(
      SseDeserializer deserializer);

  @protected
  TransferFileInfo sse_decode_transfer_file_info(SseDeserializer deserializer);

  @protected
  TransferMissionDto sse_decode_transfer_mission_dto(
      SseDeserializer deserializer);

  @protected
  TransferState sse_decode_transfer_state(SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
          CoreConfig self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_String(
      Map<String, String> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_file_info(
      Map<String, FileInfo> self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
          CoreConfig self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_bool_Sse(
      RustStreamSink<bool> self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_list_node_device_Sse(
      RustStreamSink<List<NodeDevice>> self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_pending_mission_dto_Sse(
      RustStreamSink<PendingMissionDto> self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_transfer_mission_dto_Sse(
      RustStreamSink<TransferMissionDto> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_mission(Mission self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_node_device(
      NodeDevice self, SseSerializer serializer);

  @protected
  void sse_encode_file_info(FileInfo self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer);

  @protected
  void sse_encode_list_node_device(
      List<NodeDevice> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_file_info(
      List<(String, FileInfo)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_string(
      List<(String, String)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_transfer_file_info(
      List<TransferFileInfo> self, SseSerializer serializer);

  @protected
  void sse_encode_log_entry(LogEntry self, SseSerializer serializer);

  @protected
  void sse_encode_mission(Mission self, SseSerializer serializer);

  @protected
  void sse_encode_mission_state(MissionState self, SseSerializer serializer);

  @protected
  void sse_encode_node_device(NodeDevice self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_mission(
      Mission? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_u_8_strict(
      Uint8List? self, SseSerializer serializer);

  @protected
  void sse_encode_pending_mission_dto(
      PendingMissionDto self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_file_info(
      (String, FileInfo) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_string(
      (String, String) self, SseSerializer serializer);

  @protected
  void sse_encode_transfer_file_info(
      TransferFileInfo self, SseSerializer serializer);

  @protected
  void sse_encode_transfer_mission_dto(
      TransferMissionDto self, SseSerializer serializer);

  @protected
  void sse_encode_transfer_state(TransferState self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
          int ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
              ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
          int ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
              ptr);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
extension type RustLibWasmModule._(JSObject _) implements JSObject {
  external void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
          int ptr);

  external void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerCoreConfig(
          int ptr);
}
