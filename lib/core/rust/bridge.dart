// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

import 'actor/core.dart';
import 'actor/model.dart';
import 'frb_generated.dart';
import 'logger.dart';

// These functions are ignored because they are not marked as `pub`: `_get_core`
// These types are ignored because they are not used by any `pub` functions: `CORE`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `deref`, `initialize`

Future<void> setup({required NodeDevice device}) =>
    RustLib.instance.api.crateBridgeSetup(device: device);

Stream<bool> listenServerState() =>
    RustLib.instance.api.crateBridgeListenServerState();

Future<void> startServer() => RustLib.instance.api.crateBridgeStartServer();

Future<void> shutdownServer() =>
    RustLib.instance.api.crateBridgeShutdownServer();

Future<void> changeAddress({required String addr}) =>
    RustLib.instance.api.crateBridgeChangeAddress(addr: addr);

Future<void> changeConfig({required CoreConfig config}) =>
    RustLib.instance.api.crateBridgeChangeConfig(config: config);

Stream<List<NodeDevice>> listenDevice() =>
    RustLib.instance.api.crateBridgeListenDevice();

Future<LogEntry> getLog() => RustLib.instance.api.crateBridgeGetLog();

Future<void> announce() => RustLib.instance.api.crateBridgeAnnounce();
