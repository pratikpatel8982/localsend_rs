// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../api/model.dart';
import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class Mission {
  final String id;
  final NodeDevice sender;
  final Map<String, String> tokenMap;
  final Map<String, String> reverseTokenMap;
  final Map<String, FileInfo> infoMap;

  const Mission({
    required this.id,
    required this.sender,
    required this.tokenMap,
    required this.reverseTokenMap,
    required this.infoMap,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      sender.hashCode ^
      tokenMap.hashCode ^
      reverseTokenMap.hashCode ^
      infoMap.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Mission &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          sender == other.sender &&
          tokenMap == other.tokenMap &&
          reverseTokenMap == other.reverseTokenMap &&
          infoMap == other.infoMap;
}

enum MissionState {
  idle,
  pending,
  transfering,
  finished,
  failed,
  canceled,
  busy,
  ;
}

class NodeDevice {
  final String alias;
  final String version;
  final String deviceModel;
  final String deviceType;
  final String fingerprint;
  final String address;
  final int port;
  final String protocol;
  final bool download;
  final bool announcement;
  final bool announce;

  const NodeDevice({
    required this.alias,
    required this.version,
    required this.deviceModel,
    required this.deviceType,
    required this.fingerprint,
    required this.address,
    required this.port,
    required this.protocol,
    required this.download,
    required this.announcement,
    required this.announce,
  });

  @override
  int get hashCode =>
      alias.hashCode ^
      version.hashCode ^
      deviceModel.hashCode ^
      deviceType.hashCode ^
      fingerprint.hashCode ^
      address.hashCode ^
      port.hashCode ^
      protocol.hashCode ^
      download.hashCode ^
      announcement.hashCode ^
      announce.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is NodeDevice &&
          runtimeType == other.runtimeType &&
          alias == other.alias &&
          version == other.version &&
          deviceModel == other.deviceModel &&
          deviceType == other.deviceType &&
          fingerprint == other.fingerprint &&
          address == other.address &&
          port == other.port &&
          protocol == other.protocol &&
          download == other.download &&
          announcement == other.announcement &&
          announce == other.announce;
}
